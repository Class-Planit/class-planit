# Generated by Django 3.1.4 on 2021-01-05 02:47

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='academicYear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
         migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_parent', models.BooleanField(default=False)),
                ('is_teacher', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_destrict', models.BooleanField(default=False)),
                ('is_student', models.BooleanField(default=False)),
                ('is_archived', models.BooleanField(default=False)),
                ('is_pending', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='bloomsLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=20, null=True)),
                ('group', models.CharField(blank=True, max_length=50, null=True)),
                ('color', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='classroom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classroom_title', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('academic_year', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Planit.academicyear')),
            ],
        ),
        migrations.CreateModel(
            name='gradeLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.CharField(max_length=30)),
                ('grade_labels', models.CharField(blank=True, max_length=50, null=True)),
                ('grade_image', models.ImageField(blank=True, null=True, upload_to='images/grades/')),
            ],
        ),
        migrations.CreateModel(
            name='learningStyle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=20, null=True)),
                ('group', models.CharField(blank=True, max_length=50, null=True)),
                ('color', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='lessonObjective',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_of', models.CharField(blank=True, max_length=10, null=True)),
                ('is_skill', models.BooleanField(default=False)),
                ('objective_title', models.CharField(blank=True, max_length=200, null=True)),
                ('teacher_objective', models.CharField(blank=True, max_length=1500, null=True)),
                ('lesson_classroom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Planit.classroom')),
            ],
        ),
        migrations.CreateModel(
            name='lessonSection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_num', models.CharField(blank=True, max_length=5, null=True)),
                ('title', models.CharField(blank=True, max_length=150, null=True)),
                ('content', models.CharField(blank=True, max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='lessonSectionTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=300, null=True)),
                ('is_admin', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='mainQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=500)),
                ('answer', models.CharField(blank=True, max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='standardSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Location', models.TextField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='standardSubjects',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_title', models.CharField(max_length=100)),
                ('is_admin', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='vocabularyWord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=50)),
                ('p_o_s', models.CharField(blank=True, max_length=50, null=True)),
                ('definition', models.CharField(blank=True, max_length=500, null=True)),
                ('sentence', models.CharField(blank=True, max_length=300, null=True)),
                ('audio_file', models.FileField(blank=True, null=True, upload_to='')),
                ('question_image', models.ImageField(blank=True, null=True, upload_to='images/words/')),
            ],
        ),
        migrations.CreateModel(
            name='school_user',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='user_role', serialize=False, to='Planit.user')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('username', models.CharField(max_length=30)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('use_whatsapp', models.BooleanField(default=False)),
                ('user_image', models.ImageField(blank=True, null=True, upload_to='images/')),
            ],
        ),
       
        migrations.CreateModel(
            name='wikiTopic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_selected', models.BooleanField(default=False)),
                ('topic', models.CharField(max_length=1000)),
                ('relevance', models.IntegerField(blank=True, default=0, null=True)),
                ('lesson_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Planit.lessonobjective')),
            ],
        ),
        migrations.CreateModel(
            name='weeklyObjectives',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_of', models.CharField(max_length=10)),
                ('objectives', models.ManyToManyField(blank=True, to='Planit.lessonObjective')),
                ('subject_classroom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Planit.classroom')),
            ],
        ),
        migrations.CreateModel(
            name='vocabularyList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_of', models.CharField(max_length=10)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('lesson_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Planit.lessonobjective')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Planit.standardsubjects')),
                ('vocab_words', models.ManyToManyField(blank=True, to='Planit.vocabularyWord')),
            ],
        ),
        migrations.CreateModel(
            name='teacherLessonTemplates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_section', models.ManyToManyField(blank=True, to='Planit.lessonSectionTemplate')),
                ('planning_teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='studentProfiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_ref', models.CharField(blank=True, max_length=255, null=True, verbose_name='Student Reference')),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('middle_names', models.CharField(blank=True, max_length=200, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=30, null=True)),
                ('is_enrolled', models.BooleanField(default=False)),
                ('is_suspended', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_pending', models.BooleanField(default=False)),
                ('current_grade_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Planit.gradelevel')),
                ('student_username', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='student_username', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='standardsubjects',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='standardsubjects',
            name='grade_level',
            field=models.ManyToManyField(blank=True, related_name='subject_grades', to='Planit.gradeLevel'),
        ),
        migrations.AddField(
            model_name='standardsubjects',
            name='standards_set',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Planit.standardset'),
        ),
        migrations.CreateModel(
            name='singleStandard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('standard_identifier', models.CharField(blank=True, max_length=100, null=True)),
                ('skill_topic', models.TextField(max_length=200)),
                ('standard_objective', models.CharField(blank=True, max_length=1000, null=True)),
                ('competency', models.TextField(max_length=1000)),
                ('grade_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Planit.gradelevel')),
                ('standards_set', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Planit.standardset')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Planit.standardsubjects')),
            ],
        ),
        migrations.CreateModel(
            name='questionList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_of', models.CharField(max_length=10)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('lesson_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Planit.lessonobjective')),
                ('main_questions', models.ManyToManyField(blank=True, to='Planit.mainQuestion')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Planit.standardsubjects')),
            ],
        ),
        migrations.CreateModel(
            name='lessonStandardRecommendation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_selected', models.BooleanField(default=False)),
                ('lesson_classroom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Planit.classroom')),
                ('objectives', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Planit.lessonobjective')),
                ('objectives_standard', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Planit.singlestandard')),
            ],
        ),
        migrations.AddField(
            model_name='lessonsectiontemplate',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='lessonsectiontemplate',
            name='lesson_section',
            field=models.ManyToManyField(blank=True, to='Planit.lessonSection'),
        ),
        migrations.AddField(
            model_name='lessonobjective',
            name='objectives_standards',
            field=models.ManyToManyField(blank=True, null=True, related_name='objectives_standards', to='Planit.singleStandard'),
        ),
        migrations.AddField(
            model_name='lessonobjective',
            name='subject',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Planit.standardsubjects'),
        ),
        migrations.CreateModel(
            name='lessonFull',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=300, null=True)),
                ('blooms', models.ManyToManyField(blank=True, to='Planit.bloomsLevel')),
                ('lesson_overview', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Planit.lessonobjective')),
                ('lesson_section', models.ManyToManyField(blank=True, to='Planit.lessonSection')),
                ('main_questions', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Planit.questionlist')),
                ('styles', models.ManyToManyField(blank=True, to='Planit.learningStyle')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Planit.standardsubjects')),
                ('vocabulary_list', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Planit.vocabularylist')),
            ],
        ),
        migrations.CreateModel(
            name='keywordResults',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_selected', models.BooleanField(default=False)),
                ('word', models.CharField(blank=True, max_length=100, null=True)),
                ('p_o_s', models.CharField(blank=True, max_length=50, null=True)),
                ('definition', models.CharField(blank=True, max_length=600, null=True)),
                ('sentence', models.CharField(blank=True, max_length=600, null=True)),
                ('relevance', models.IntegerField(blank=True, default=0, null=True)),
                ('lesson_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Planit.lessonobjective')),
            ],
        ),
        migrations.AddField(
            model_name='gradelevel',
            name='standards_set',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Planit.standardset'),
        ),
        migrations.CreateModel(
            name='googleSearchResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_selected', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=100)),
                ('link', models.CharField(max_length=500)),
                ('snippet', models.CharField(max_length=1000)),
                ('lesson_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Planit.lessonobjective')),
            ],
        ),
        migrations.CreateModel(
            name='googleRelatedQuestions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_selected', models.BooleanField(default=False)),
                ('question', models.CharField(max_length=500)),
                ('link', models.CharField(max_length=500)),
                ('snippet', models.CharField(max_length=1000)),
                ('lesson_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Planit.lessonobjective')),
            ],
        ),
        migrations.CreateModel(
            name='classroomSubjects',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_classroom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Planit.classroom')),
                ('subjects', models.ManyToManyField(blank=True, to='Planit.standardSubjects')),
            ],
        ),
        migrations.AddField(
            model_name='classroom',
            name='grade_level',
            field=models.ManyToManyField(blank=True, related_name='grade_level', to='Planit.gradeLevel'),
        ),
        migrations.AddField(
            model_name='classroom',
            name='main_teacher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='main_teacher', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='classroom',
            name='standards_set',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Planit.standardset'),
        ),
        migrations.AddField(
            model_name='classroom',
            name='student',
            field=models.ManyToManyField(blank=True, related_name='student', to='Planit.studentProfiles'),
        ),
        migrations.AddField(
            model_name='classroom',
            name='support_teachers',
            field=models.ManyToManyField(blank=True, related_name='support_teacher', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='academicyear',
            name='planning_teacher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
